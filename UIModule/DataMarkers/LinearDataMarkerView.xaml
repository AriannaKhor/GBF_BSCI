<UserControl x:Class="UIModule.DataMarkers.LinearDataMarkerView"
             x:Name="LinearDMView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:local="clr-namespace:UIModule.DataMarkers"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="False"
             d:DesignHeight="20" d:DesignWidth="100">
    
    <UserControl.Resources>
        <Storyboard x:Key="blinksty" Completed="Storyboard_Completed">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" AutoReverse="False"
                                         From="0.1" To="1" Duration="0:0:0.45" Completed="Storyboard_Completed"/>
        </Storyboard>
        <Style x:Key="RoundCorner" TargetType="{x:Type Button}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0.5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="5" >
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Bold"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#A685BDF2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    <Grid>
        <Grid.Style>
            <Style>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsBlinking}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard Storyboard="{StaticResource blinksty}"/>
                        </DataTrigger.EnterActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
        <Grid.RowDefinitions>
            <RowDefinition Height="{Binding Height}"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Path Stroke="Black" StrokeThickness="2" IsHitTestVisible="False">
            <Path.Data>
                <LineGeometry
                StartPoint="{Binding StartPoint, Mode=OneWay}"
                EndPoint="{Binding EndPoint, Mode=OneWay}"/>
            </Path.Data>
        </Path>

        <ItemsControl ItemsSource="{Binding DataMarkers}" IsHitTestVisible="True">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Canvas.Left" Value="{Binding Path=Left, Mode=OneWay}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Path=Top, Mode=OneWay}" />
                </Style>
            </ItemsControl.ItemContainerStyle>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <local:LinearSlotView />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <Canvas Grid.Row="1" IsHitTestVisible="True">
            <Label Content="{Binding Title}" FontSize="12" FontWeight="Bold" Margin="0,5,0,0">
                <Label.Style>
                    <Style TargetType="Label">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=DataContext.CanSelect, ElementName=LinearDMView}" Value="True">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=DataContext.CanSelect, ElementName=LinearDMView}" Value="False">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>

            <Expander ExpandDirection="Down" IsExpanded="{Binding IsExpended}" Background="Transparent" Margin="0,5,0,0">
                <Expander.Style>
                    <Style TargetType="Expander">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=DataContext.CanSelect, ElementName=LinearDMView}" Value="False">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=DataContext.CanSelect, ElementName=LinearDMView}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Expander.Style>
                <Expander.Header>
                    <TextBlock Text="{Binding Title, Mode=OneWay}" Grid.ColumnSpan="2" HorizontalAlignment="Center" FontSize="12" FontWeight="Bold" />
                </Expander.Header>
                <Border BorderBrush="black" BorderThickness="1" CornerRadius="15" Background="White" Margin="2">
                    <StackPanel Orientation="Vertical">
                        <controls:ToggleSwitch IsOn="{Binding IsSimple, Mode=TwoWay}" Margin="5"
                                                   ContentPadding="5 3" OnContent="Simple View" OffContent="Detail View" >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Toggled">
                                    <i:InvokeCommandAction Command="{Binding ToggledCommand}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseLeave">
                                    <i:InvokeCommandAction Command="{Binding ReAdjustCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </controls:ToggleSwitch>
                        <StackPanel Orientation="Horizontal">
                            <Button Style="{DynamicResource RoundCorner}" Command="{Binding MarkerCommand}" CommandParameter="RotateCW" Background="Transparent" BorderThickness="0" ToolTip="Rotate CW">
                                <Image Source="/GreatechApp.Core;component/Icon/right_arrow.png" Width="25" Height="25"/>
                            </Button>

                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" BorderBrush="Black" BorderThickness="0.6" CornerRadius="5" Width="29" Margin="0,0,0,1">
                                    <Button Content="0°" Style="{DynamicResource RoundCorner}"  Command="{Binding MarkerCommand}" CommandParameter="0"/>
                                </Border>

                                <Border Grid.Row="1" Grid.Column="1" BorderBrush="Black" BorderThickness="0.6" CornerRadius="5" Width="29" Margin="5,0,0,0">
                                    <Button Content="90°" Style="{DynamicResource RoundCorner}" Command="{Binding MarkerCommand}" CommandParameter="90" />
                                </Border>

                                <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" BorderBrush="Black" BorderThickness="0.6" CornerRadius="5" Width="29" Margin="0,1,0,0">
                                    <Button Content="180°" Style="{DynamicResource RoundCorner}" Command="{Binding MarkerCommand}" CommandParameter="180" />
                                </Border>

                                <Border  Grid.Row="1" Grid.Column="0" BorderBrush="Black" BorderThickness="0.6" CornerRadius="5" Width="29" Margin="0,0,5,0">
                                    <Button Content="270°" Style="{DynamicResource RoundCorner}" Command="{Binding MarkerCommand}" CommandParameter="270" />
                                </Border>
                            </Grid>
                            <Button Style="{DynamicResource RoundCorner}" Command="{Binding MarkerCommand}" CommandParameter="RotateCCW" Background="Transparent" BorderThickness="0" ToolTip="Rotate CCW">
                                <Image Source="/GreatechApp.Core;component/Icon/left_arrow.png" Width="25" Height="25"/>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Expander>
        </Canvas>
    </Grid>
</UserControl>
