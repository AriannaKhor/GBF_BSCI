// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using DBManager.Domains.Configurations;
using Microsoft.EntityFrameworkCore;

namespace DBManager.Domains
{
    public partial class AppDBContext : DbContext
    {
        public AppDBContext()
        {
        }

        public AppDBContext(DbContextOptions<AppDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TblAccessControl> TblAccessControl { get; set; }
        public virtual DbSet<TblError> TblError { get; set; }
        public virtual DbSet<TblLot> TblLot { get; set; }
        public virtual DbSet<TblOEE> TblOEE { get; set; }
        public virtual DbSet<TblOEEConfig> TblOEEConfig { get; set; }
        public virtual DbSet<TblRecipe> TblRecipe { get; set; }
        public virtual DbSet<TblUser> TblUser { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
                optionsBuilder.UseSqlServer("Data Source=localhost\\SQLEXPRESS;Initial Catalog=AppDb_SecGemTest;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.ApplyConfiguration(new TblAccessControlConfiguration());
            modelBuilder.ApplyConfiguration(new TblErrorConfiguration());
            modelBuilder.ApplyConfiguration(new TblLotConfiguration());
            modelBuilder.ApplyConfiguration(new TblOEEConfiguration());
            modelBuilder.ApplyConfiguration(new TblOEEConfigConfiguration());
            modelBuilder.ApplyConfiguration(new TblRecipeConfiguration());
            modelBuilder.ApplyConfiguration(new TblUserConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
